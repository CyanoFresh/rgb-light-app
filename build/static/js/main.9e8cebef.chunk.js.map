{"version":3,"sources":["config.js","deviceStateContext.js","Controller.js","App.js","hooks.js","serviceWorker.js","index.js"],"names":["pollInterval","pollTimeout","kelvin","colors","DeviceStateContext","createContext","DeviceStateContextProvider","props","useState","on","color","r","g","b","batteryLevel","undefined","state","setState","Provider","value","children","useStyles","makeStyles","theme","loadingTitle","marginTop","spacing","paper","padding","paper2","name","marginBottom","loadingParent","textAlign","chroma","boxShadow","shadows","colorToDevice","rgb","responseToState","response","split","colorFromDevice","Boolean","Controller","url","isOnline","setIsOnline","classes","config","setKelvin","useContext","load","a","isUpdate","params","controller","AbortController","signal","setTimeout","abort","fetch","method","text","responseString","prevState","console","log","message","useEffect","timer","setInterval","clearTimeout","handleColorChange","Grid","container","item","lg","sm","xs","width","className","onChangeComplete","styles","saturation","touchAction","controls","disableAlpha","Paper","circleSize","circleSpacing","Button","variant","size","fullWidth","onClick","Typography","id","gutterBottom","Slider","min","max","defaultValue","valueLabelDisplay","getAriaValueText","onChange","e","onChangeCommitted","kelvinToRgb","aria-labelledby","CircularProgress","thickness","Box","root","flexGrow","display","appBar","zIndex","drawer","title","fontFamily","fontWeight","whiteSpace","wordBreak","marginRight","content","minHeight","overflow","menuButton","toolbar","mixins","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","alignItems","inputRoot","inputInput","transition","transitions","create","searchIcon","height","pointerEvents","justifyContent","TopMenu","deviceUrl","onUrlChange","online","AppBar","Toolbar","InputBase","placeholder","input","App","key","initialValue","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","setDeviceUrl","CssBaseline","target","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9e8cebef.chunk.js","sourcesContent":["export default {\r\n  pollInterval: 5000,\r\n  pollTimeout: 1900,\r\n  kelvin: 3000,\r\n  colors: [\r\n    'red',\r\n    'rgb(255,32,0)',\r\n    'orangeRed',\r\n    'yellow',\r\n    'lime',\r\n    'springGreen',\r\n    'cyan',\r\n    'Aquamarine',\r\n    'DeepSkyBlue',\r\n    'blue',\r\n    'rgb(127,0,255)',\r\n    'Magenta',\r\n    'rgb(255,0,127)',\r\n    'rgb(255,0,4)',\r\n  ],\r\n}\r\n","import { createContext, useState } from 'react';\r\n\r\nexport const DeviceStateContext = createContext();\r\n\r\nexport const DeviceStateContextProvider = props => {\r\n  const [state, setState] = useState({\r\n    on: false,\r\n    color: {\r\n      r: 0,\r\n      g: 0,\r\n      b: 0,\r\n    },\r\n    batteryLevel: undefined,\r\n  });\r\n\r\n  return (\r\n    <DeviceStateContext.Provider value={[state, setState]}>\r\n      {props.children}\r\n    </DeviceStateContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { ChromePicker, CirclePicker } from 'react-color';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport kelvinToRgb from 'kelvin-to-rgb';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport config from './config';\r\nimport { DeviceStateContext } from './deviceStateContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  loadingTitle: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2, 3),\r\n  },\r\n  paper2: {\r\n    padding: theme.spacing(4, 3),\r\n  },\r\n  name: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  loadingParent: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(5, 0),\r\n  },\r\n  chroma: {\r\n    boxShadow: theme.shadows[1] + ' !important',\r\n  },\r\n}));\r\n\r\nconst colorToDevice = (color) => ({\r\n  r: color.rgb.r * 4,\r\n  g: color.rgb.g * 4,\r\n  b: color.rgb.b * 4,\r\n});\r\n\r\nconst colorFromDevice = (r, g, b) => ({\r\n  r: r / 4,\r\n  g: g / 4,\r\n  b: b / 4,\r\n});\r\n\r\nconst responseToState = (response) => {\r\n  const [on, r, g, b, batteryLevel] = response.split(',');\r\n\r\n  const color = colorFromDevice(+r, +g, +b);\r\n\r\n  return {\r\n    on: Boolean(+on),\r\n    color,\r\n    batteryLevel,\r\n  };\r\n};\r\n\r\nfunction Controller({ url, isOnline, setIsOnline }) {\r\n  const classes = useStyles();\r\n  const [kelvin, setKelvin] = useState(config.kelvin);\r\n  const [state, setState] = useContext(DeviceStateContext);\r\n\r\n  const load = async (isUpdate = false, params = '') => {\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n\r\n    // Cancel request if there is no response\r\n    setTimeout(() => controller.abort(), config.pollTimeout);\r\n\r\n    try {\r\n      const response = await fetch(url + params, {\r\n        method: isUpdate ? 'POST' : 'GET',\r\n        signal,\r\n      });\r\n      const responseString = await response.text();\r\n\r\n      setIsOnline(true);\r\n      setState(prevState => ({ ...prevState, ...responseToState(responseString) }));\r\n    } catch (e) {\r\n      console.log('Request failed: ', e.message);\r\n      setIsOnline(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(load, 5000);\r\n\r\n    load();\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [url]);\r\n\r\n  const handleColorChange = (color) => {\r\n    const { r, g, b } = colorToDevice(color);\r\n\r\n    return load(true, `?on=1&r=${r}&g=${g}&b=${b}`);\r\n  };\r\n\r\n  const handlePower = () => {\r\n    const { r, g, b } = colorToDevice({ rgb: state.color });\r\n\r\n    return load(true, `?on=${+!state.on}&r=${r}&g=${g}&b=${b}`);\r\n  };\r\n\r\n  if (!isOnline) {\r\n    return (\r\n      <div className={classes.loadingParent}>\r\n        <div><CircularProgress size={90} thickness={3}/></div>\r\n        <Box>\r\n          <Typography variant=\"h4\" gutterBottom className={classes.loadingTitle}>Not Connected</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>Connect to Wi-Fi RGB Light</Typography>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item lg={3} sm={6} xs={12}>\r\n        <ChromePicker\r\n          width={'100%'}\r\n          className={classes.chroma}\r\n          color={state.color}\r\n          onChangeComplete={handleColorChange}\r\n          styles={{\r\n            'default': {\r\n              saturation: {\r\n                touchAction: 'none',\r\n              },\r\n              controls: {\r\n                touchAction: 'none',\r\n              },\r\n            },\r\n          }}\r\n          disableAlpha\r\n        />\r\n      </Grid>\r\n      <Grid item lg={3} sm={6} xs={12}>\r\n        <Paper className={classes.paper2}>\r\n          <CirclePicker\r\n            color={state.color}\r\n            onChangeComplete={handleColorChange}\r\n            width=\"100%\"\r\n            circleSize={40}\r\n            circleSpacing={17}\r\n            colors={config.colors}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item lg={3} sm={6} xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color={state.on ? 'default' : 'primary'}\r\n          size=\"large\"\r\n          fullWidth\r\n          onClick={handlePower}\r\n        >\r\n          {state.on ? 'Turn Off' : 'Turn On'}\r\n        </Button>\r\n      </Grid>\r\n      <Grid item lg={3} sm={6} xs={12}>\r\n        <Paper className={classes.paper}>\r\n          <Typography id=\"kelvin-slider-label\" gutterBottom>\r\n            Color Temperature, K\r\n          </Typography>\r\n          <Slider\r\n            value={kelvin}\r\n            min={600}\r\n            max={5000}\r\n            defaultValue={3000}\r\n            valueLabelDisplay=\"auto\"\r\n            getAriaValueText={(value) => `${value} K`}\r\n            onChange={(e, value) => setKelvin(value)}\r\n            onChangeCommitted={(e, value) => {\r\n              const [r, g, b] = kelvinToRgb(value);\r\n\r\n              return handleColorChange({\r\n                rgb: {\r\n                  r, g, b,\r\n                },\r\n              });\r\n            }}\r\n            aria-labelledby=\"kelvin-slider-label\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Controller;\r\n","import React, { useContext, useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Controller from './Controller';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { useLocalStorage } from './hooks';\r\nimport Wifi from '@material-ui/icons/Wifi';\r\nimport WifiOff from '@material-ui/icons/WifiOff';\r\nimport { DeviceStateContext, DeviceStateContextProvider } from './deviceStateContext';\r\nimport BatteryChargingFullIcon from '@material-ui/icons/BatteryChargingFull';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontFamily: 'Product Sans',\r\n    fontWeight: 400,\r\n    whiteSpace: 'nowrap',\r\n    wordBreak: 'keep-all',\r\n    marginRight: theme.spacing(),\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    minHeight: '100vh',\r\n    overflow: 'auto',\r\n    padding: theme.spacing(1),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    width: '100%',\r\n  },\r\n  batteryLevel: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 6),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(6.5),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nfunction TopMenu({ deviceUrl, onUrlChange, online }) {\r\n  const classes = useStyles();\r\n  const [state] = useContext(DeviceStateContext);\r\n\r\n  return (\r\n    <AppBar position='fixed' className={classes.appBar}>\r\n      <Toolbar>\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            {online ? <Wifi /> : <WifiOff />}\r\n          </div>\r\n          <InputBase\r\n            placeholder='Device URL…'\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n            value={deviceUrl}\r\n            onChange={onUrlChange}\r\n          />\r\n        </div>\r\n        {Boolean(state.batteryLevel) && (\r\n          <div className={classes.batteryLevel}>\r\n            <BatteryChargingFullIcon />\r\n            {state.batteryLevel}%\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [isOnline, setIsOnline] = useState(false);\r\n  const [deviceUrl, setDeviceUrl] = useLocalStorage('device_url', 'http://192.168.4.1/');\r\n\r\n  return (\r\n    <DeviceStateContextProvider>\r\n      <CssBaseline />\r\n      <div className={classes.root}>\r\n        <TopMenu online={isOnline} deviceUrl={deviceUrl} onUrlChange={(e) => setDeviceUrl(e.target.value)} />\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Controller url={deviceUrl} isOnline={isOnline} setIsOnline={setIsOnline} />\r\n        </main>\r\n      </div>\r\n    </DeviceStateContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from 'react';\r\n\r\nexport function useLocalStorage(key, initialValue) {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = value => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n\r\n      setStoredValue(valueToStore);\r\n\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}